var searchIndex = JSON.parse('{\
"n_body":{"doc":"","t":[5,0,0,0,5,0,0,0,0,5,13,13,4,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,2,2,2,2,2,17,5,5,5,5,3,18,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,2,18,3,3,2,8,18,12,11,0,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,12,12,12,11,11,0,12,11,12,0,11,11,11,0,11,11,11,12,11,3,13,13,4,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,8,10,11,11,10,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,5,5,5,5,5,0,0,5,5,3,18,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11],"n":["amain","config","controls","game_loop","main","mov_avg","particle","physics","start_screen","window_conf","Belt","Belt","DistributionMethod","DistributionMethodEmpty","Plain","Plain","Settings","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","corresponding","corresponding_default","count","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dt_multiplier","eq","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","init","init","init","into","into","into","is_same","kill_dist","load","load","load_from_string","load_remove_enum","my_config","prelude","serialize","serialize","sims_per_frame","strip_enum","to_owned","to_owned","to_sample_","to_sample_","to_sample_","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write","0","0","DM","DME","DistributionMethod","DistributionMethodEmpty","Settings","ZOOM_FACTOR","fix_aspect_ratio","zoom","adaptive_simrate","game_loop","MovingAverage","NUM","avg","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_sample_","index","init","insert","insert_i32","into","list","new","new","to_sample_","try_from","try_into","type_id","vzip","BeltRandomGen","G","MinMax","Particle","PlainRandomGen","RandomParticleGen","SIZE_MULTIPLIER","accel","add_accel","belt_random","borrow","borrow_mut","check_collision","clone","clone_into","collided","deref","deref_mut","diff","dist","dist_sqrd","draw","draw_line","drop","fmt","from","from_sample_","gen","get_enum","grav","init","into","mass","max","min","momentum","new","plain_random","pos","radius","radius","random_particle_gen","step","to_owned","to_sample_","tools","try_from","try_into","type_id","vel","vzip","BeltRandomGen","CCW","CW","Direction","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","direction","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","gen","get_angle_offset","get_enum","init","init","into","into","mass","new","offset","radius","serialize","serialize","to_owned","to_owned","to_sample_","to_sample_","try_from","try_from","try_into","try_into","type_id","type_id","vel","vel_angle","vzip","vzip","PlainRandomGen","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_sample_","gen","get_enum","init","into","mass","max_radius","max_vel","new","serialize","to_owned","to_sample_","try_from","try_into","type_id","vzip","RandomParticleGen","gen","gen_multi","gen_multi","get_enum","write","write","FULL_CIRCLE","MinMax","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","exc_rand","fmt","from","from_sample_","inc_rand","init","into","max","min","minus","new","new_unchecked","plus","radians","random_angle","random_angle_full_circle","random_vec","random_vec_full_circle","range_exc","range_inc","serialize","to_owned","to_sample_","try_from","try_into","type_id","vzip","collisions","gravity","move_bodies","physics_loop","config_screen","credits","param_edit","splash_screen","start_screen","Link","SPLIT_STRING","borrow","borrow_mut","clone","clone_into","deref","deref_mut","disp","disp_vec","drop","fmt","from","from_sample_","info","init","into","link","make","name","source_list","to_owned","to_sample_","try_from","try_into","type_id","vzip","Persistance","borrow","borrow_mut","clone","clone_into","deref","deref_mut","disp","drop","file_picker","file_refresh_timer","files","fmt","from","from_sample_","init","into","kill_dist","kill_dist_enabled","max_kill_dist","new","param_edit","path","path_name","rand_edit","refresh_files","rgs","rgs_cache","simulate_button","to_owned","to_sample_","try_from","try_into","type_id","update_rgs_and_cache","update_settings","vzip"],"q":["n_body","","","","","","","","","","n_body::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::config::DistributionMethod","","n_body::config::prelude","","","","","n_body::controls","","","n_body::game_loop","","n_body::mov_avg","","","","","","","","","","","","","","","","","","","","","","","","n_body::particle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::particle::belt_random","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::particle::plain_random","","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::particle::random_particle_gen","","","","","","","n_body::particle::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::physics","","","","n_body::start_screen","","","","","n_body::start_screen::credits","","","","","","","","","","","","","","","","","","","","","","","","","","","n_body::start_screen::param_edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","macroquad configuration","","","an enum to represent all the different types of random …","same as <code>DistributionMethod</code>, but empty (to be used for the …","","","","","","","","","","","","","","get the corresponding <code>DistributionMethodEmpty</code>","get the corresponding <code>DistributionMethodEmpty</code>","how many particles are generated","","","if there was an issue reading the settings file, this …","","","","","","","","","","","","how many times faster simulation time is than real time","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","checks if <code>self</code> corresponds to <code>other</code>","how far can particles can go before they are deleted","read a .ron file from disk and deserialize the contents to …","deserialize the given file","read a <code>&amp;str</code> with the same format as a .ron and deserialize …","deserializes a <code>RandomParticleGen</code> from the specified .ron …","return my custom serilization configuration","shorthand stuff","","","how many physics loops are run per frame displayed","return the structure inside of the enum","","","","","","","","","","","","","","","","","","serialize <code>self</code> to the given file","serialize to the given file","","","","","","","","how much to multiply/divied the zoom by","correct for aspect ratio so circles look circular and …","controls the zoom level of the camera","adjust sims per frame to maintain a <code>goal</code> fps this uses a …","","","how many numbers are kept in the moving average","calcualte the average","","","","","","","Returns the argument unchanged.","","which index is the next to be replaced","","replace the oldest number with <code>x</code>","replace the oldest number with <code>x</code>, converting it to a <code>f32</code>","Calls <code>U::from(self)</code>.","","create a new moving average","","","","","","","","gravitational constant","a structure to represent the min/max bounds off random …","a structure to represent a particle","","a trait to define what a random particle generator is","multiplier to adjust size of particles","","add acceleration","","","","check collision for 2 particles. if collision occurs, the …","","","allows delaying particle deletion untill a later point in …","","","finds the difference in position between <code>self</code> and <code>other</code>","finds the distance from <code>self</code> to <code>other</code>","finds the distance squared from <code>self</code> to <code>other</code>. This is …","draws particle as an empty circle on screen with given …","draws particle as an empty circle on screen with given …","","","Returns the argument unchanged.","","generate a random particle with given settings","convert to <code>DistributionMethod</code>","apply gravitational acceleration to the given <code>Particles</code> …","","Calls <code>U::from(self)</code>.","","","","find the momentum vector","creates a new <code>Particle</code> w/ given parameters and …","","","recalculates the radius The radius is determined by …","this is how big the object should be on screen and for …","","adjusts position and velocity according to the given …","","","","","","","","","structure to represent settings for randomly generating …","counter clockwise","clockwise","an enum to represent which direction the particles are …","","","","","corrdinates of center of belt","","","","","implementation of the <code>Default</code> trait for <code>BeltRandomGen</code>","counter clock-qise is the default","","","","","","","direction of orbit","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","returns the angle between a tangential vector in the given …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a new <code>BeltRandomGen</code> structure","returns the center offset as a <code>Vec2</code>","distance from center","","","","","","","","","","","","","speed","tangent angle of velocity to the circle around the <code>center</code> …","","","structure to represent settings for randomly generating …","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","max distance from origin","max speed","make a new <code>PlainRandomGen</code> structure","","","","","","","","a trait to define what a random particle generator is","generate a random particle with given settings","generate many <code>Particle</code>s with the given settings this …","generate many <code>Particle</code>s with the given settings this …","convert to <code>DistributionMethod</code>","deserializes a <code>RandomParticleGen</code> from the specified .ron …","deserializes a <code>RandomParticleGen</code> from the specified .ron …","angle (in radians) for a full circle","a structure to represent the min/max bounds off random …","","","","","implementation of the <code>Default</code> trait for <code>MinMax</code>","","","","","generate a random number, exclusive","","Returns the argument unchanged.","","generate a random number, inclusive","","Calls <code>U::from(self)</code>.","","","return <code>self</code> with x subtracted from both min and max","create a new <code>Self</code> and panic if min &gt; max","create a new <code>Self</code> w/o checking that min &lt; max this allows …","return <code>self</code> with x added to both min and max","return self, but in radians","generates a random angle between the given bounds in …","generates a random angle from 0 to 2pi radians","generates a random <code>Vec2</code> using polar bounds","generates a random <code>Vec2</code> using polar bounds with an angle …","exclusive range, equivelent to <code>self.min..self.max</code>","inclusive range, equivelent to <code>self.min..=self.max</code>","","","","","","","","calculate collisions","calculate gravity","move bodies","executes the physics loop <code>steps_per</code> times. This allows you …","display configuration screen. Allows the user to select …","","","display splash screen. shows the different resources I …","display the splash screen then display the configuration …","structure to represent a link","the string that splits the name and the url","","","","","","","display as a hyperlink in the UI","display a “slice” of <code>Link</code>s in the UI a slice is a more …","","","Returns the argument unchanged.","","display some info about me and the version of the binary …","","Calls <code>U::from(self)</code>.","url of link","make a <code>Link</code> from a <code>&amp;str</code> of the format “name: link”","display name of the link","parse the copy of references.txt incuded in the binary at …","","","","","","","stores the state of the UI and options and stuff so it can …","","","","","","","display the selected distribuion method","","file picker UI","how many frames until files are refreshed","list of all <code>.ron</code> files that aren’t <code>settings.ron</code>","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","maximum value for kill distance","create a new persistance struct with a bunch of default …","UI for editing settings","path to rand distribution settings","get the path file name as a plain old String","UI for selecting distribuiton method config","check to see if files should be refreshed yet, if so, …","this is the current rand distribution settings","cache of the file specified in <code>self.path</code> this exists so we …","button to continue to simulation","","","","","","update the cache and rgs","update kill distance enable/disable",""],"i":[0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,3,4,5,3,4,5,3,4,3,4,3,4,5,3,4,5,3,4,5,3,4,5,3,5,3,4,5,5,4,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,5,3,5,3,3,0,0,3,5,5,3,3,4,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,5,39,40,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,22,0,0,0,0,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,13,13,22,22,22,22,29,29,22,22,0,22,22,22,0,22,22,22,0,22,22,22,22,22,0,28,28,0,27,28,27,28,27,27,28,27,28,27,28,27,28,27,28,27,28,27,27,28,27,28,27,28,27,28,27,28,27,27,28,27,28,27,27,27,27,27,28,27,28,27,28,27,28,27,28,27,28,27,27,27,28,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,13,13,13,13,13,13,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[[[],1],0,0,0,[[]],0,0,0,0,[[],2],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[3,4],[4,3],0,[[],3],[[],4],[[],5],[6],[6],[6],[6],[6],[6],[[],[[7,[3]]]],[[],[[7,[5]]]],[6],[6],[6],0,[[4,4],8],[[3,9],10],[[4,9],10],[[5,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[3,4],8],0,[11,[[1,[3]]]],[11,[[1,[5]]]],[12,[[1,[3]]]],[11,[[1,[[14,[13]]]]]],[[],15],0,[3,7],[5,7],0,[3,[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[3,11],1],[[5,11],1],0,0,0,0,0,0,0,0,[17],[17],[[5,18]],[[19,17,5]],0,0,[20,21],[[]],[[]],[6],[6],[6],[[20,9],10],[[]],[[]],0,[[],6],[[20,21]],[[20,18]],[[]],0,[[],20],0,[[]],[[],7],[[],7],[[],16],[[]],0,0,0,0,0,0,0,0,[[22,23]],0,[[]],[[]],[[24,24]],[22,22],[[]],0,[6],[6],[[22,22],23],[[22,22],21],[[22,22],21],[[22,25]],[[22,21,25]],[6],[[22,9],10],[[]],[[]],[26,22],[[],3],[[24,24]],[[],6],[[]],0,0,0,[22,23],[[23,23,21],22],0,0,[22],0,0,[[22,21]],[[]],[[]],0,[[],7],[[],7],[[],16],0,[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[27,27],[28,28],[[]],[[]],[[],27],[[],28],[6],[6],[6],[6],[[],[[7,[27]]]],[[],[[7,[28]]]],0,[6],[6],[[27,9],10],[[28,9],10],[[]],[[]],[[]],[[]],[[27,26],22],[28,21],[27,3],[[],6],[[],6],[[]],[[]],0,[[23,29,29,29,29],27],[27,23],0,[27,7],[28,7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],0,0,[[]],[[]],0,[[]],[[]],[30,30],[[]],[[],30],[6],[6],[[],[[7,[30]]]],[6],[[30,9],10],[[]],[[]],[[30,26],22],[30,3],[[],6],[[]],0,0,0,[[21,21,21,21],30],[30,7],[[]],[[]],[[],7],[[],7],[[],16],[[]],0,[26,22],[31,[[19,[22]]]],[31,[[19,[22]]]],[[],3],[11,1],[11,1],0,0,[[]],[[]],[29,29],[[]],[[],29],[6],[6],[[],[[7,[29]]]],[6],[[29,26],21],[[29,9],10],[[]],[[]],[[29,26],21],[[],6],[[]],0,0,[[29,21],29],[[21,21],29],[[21,21],29],[[29,21],29],[29,29],[[26,29],21],[26,21],[[26,29,29],23],[[26,29],23],[29,[[32,[21]]]],[29,[[33,[21]]]],[29,7],[[]],[[]],[[],7],[[],7],[[],16],[[]],[19],[[]],[[19,21]],[[19,31,21]],[[11,11]],0,0,[[]],[[11,11]],0,0,[[]],[[]],[34,34],[[]],[6],[6],[[34,35]],[35],[6],[[34,9],10],[[]],[[]],[35],[[],6],[[]],0,[12,[[36,[34]]]],0,[[],[[19,[34]]]],[[]],[[]],[[],7],[[],7],[[],16],[[]],0,[[]],[[]],[37,37],[[]],[6],[6],[[37,35]],[6],[[37,35]],0,0,[[37,9],10],[[]],[[]],[[],6],[[]],0,0,[[],21],[[11,5],37],[[37,35,5]],0,[37,38],[[37,35]],[37,1],0,0,[[37,35,8]],[[]],[[]],[[],7],[[],7],[[],16],[37],[[37,5]],[[]]],"p":[[6,"Result"],[3,"Conf"],[4,"DistributionMethod"],[4,"DistributionMethodEmpty"],[3,"Settings"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"PathBuf"],[15,"str"],[8,"RandomParticleGen"],[3,"Box"],[3,"PrettyConfig"],[3,"TypeId"],[3,"Camera2D"],[15,"i32"],[3,"Vec"],[3,"MovingAverage"],[15,"f32"],[3,"Particle"],[3,"Vec2"],[3,"RefCell"],[3,"Color"],[3,"ThreadRng"],[3,"BeltRandomGen"],[4,"Direction"],[3,"MinMax"],[3,"PlainRandomGen"],[15,"u16"],[3,"Range"],[3,"RangeInclusive"],[3,"Link"],[3,"Ui"],[4,"Option"],[3,"Persistance"],[3,"String"],[13,"Plain"],[13,"Belt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
